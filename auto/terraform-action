#!/bin/bash -eu

cd $(dirname $0)/..
source ./auto/set-env-var

ACTION=$1
OBJECT=$2
ENV=${3-'test'}
VAR_FILE=""

CONF_DIR="./terraform/${OBJECT}"

display_status "Initialize terraform..."

# The -reconfigure option disregards any existing configuration, preventing migration of any existing state
# Use the -upgrade option if you want Terraform to ignore the dependency lock file and consider installing newer versions based on versions.tf
auto/terraform -chdir=${CONF_DIR} init -reconfigure -upgrade

# Available while using IAM user authentication rather than SSO
# if auto/terraform -chdir=${CONF_DIR} workspace new ${ENV}; then
#     display_status "Workspace '${ENV}' created!"
# fi

[ ! -d ${CONF_DIR}/tmp ] && mkdir ${CONF_DIR}/tmp

if [ ! -f ${CONF_DIR}/tmp/id_rsa ]; then
  ssh-keygen -t rsa -P "" -f ${CONF_DIR}/tmp/id_rsa <<<y 2>&1 >/dev/null
  chmod 400 ${CONF_DIR}/tmp/id_rsa
fi

display_status "Start to ${ACTION} ${OBJECT} in ${ENV} via terraform..."

# auto/terraform -chdir=${CONF_DIR} workspace select ${ENV}

if [ ${ACTION} != "validate" ]; then
  VAR_FILE="-var-file env/${ENV}.tfvars"
fi

auto/terraform -chdir=${CONF_DIR} \
               ${ACTION} \
               ${VAR_FILE}

display_status "Done"
